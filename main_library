-- Load Soka UI Library from your URL.
local url = "https://raw.githubusercontent.com/sokashadow/soka_hub_library/main/main_library?t=" .. os.time()
local response = game:HttpGet(url)
local success, SokaUI = pcall(function() return loadstring(response)() end)
if not success or not SokaUI then
    error("Failed to load Soka UI Library: " .. tostring(SokaUI))
end

local Window = SokaUI:CreateWindow("Soka Hub", "DarkTheme")
if not Window then
    error("Failed to create Window from Soka UI Library")
end

-- Services
local RunService = game:GetService("RunService")
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local Camera = workspace.CurrentCamera
local UserInputService = game:GetService("UserInputService")

-- Global table for all connections
local connections = {}

-- States
local FlightEnabled = false
local SpeedEnabled = false
local NoClipEnabled = false
local TargetSpeed = 1           -- Default horizontal speed from slider
local FlightSpeed = 50
local DashSpeed = 100
local DashCooldown = false
local RunESPUpdate = true
local NameESP = {}
local CustomHighlights = {}
local CustomESPColor = Color3.new(1, 0, 0)

-------------------------------------------------------
-- Create dedicated tabs
-------------------------------------------------------

-- Speed Tab & Section
local SpeedTab = Window:CreateTab("Speed")
local SpeedSection = SpeedTab:CreateSection("Speed")
SpeedSection:NewKeybind("Speed Toggle", "Toggle speed with key", Enum.KeyCode.X, function()
    SpeedEnabled = not SpeedEnabled
    if SpeedEnabled then
        local speedConnection = RunService.Heartbeat:Connect(function()
            if LocalPlayer.Character and SpeedEnabled then
                local hrp = LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
                local humanoid = LocalPlayer.Character:FindFirstChild("Humanoid")
                if hrp and humanoid then
                    local moveDir = humanoid.MoveDirection
                    local currentVel = hrp.Velocity
                    local desiredVel = Vector3.new(moveDir.X * TargetSpeed, currentVel.Y, moveDir.Z * TargetSpeed)
                    hrp.Velocity = currentVel:Lerp(desiredVel, 0.2)
                end
            end
        end)
        table.insert(connections, speedConnection)
    end
end)

SpeedSection:NewSlider("Speed Value", "Adjust speed value", 500, 1, function(value)
    TargetSpeed = value
end, 1)

-- Flight Tab & Section
local FlightTab = Window:CreateTab("Flight")
local FlightSection = FlightTab:CreateSection("Flight")
FlightSection:NewKeybind("Flight Toggle", "Toggle flight with key", Enum.KeyCode.F, function()
    FlightEnabled = not FlightEnabled
    if FlightEnabled then
        local char = LocalPlayer.Character
        if char then
            local humanoid = char:WaitForChild("Humanoid")
            local hrp = char:WaitForChild("HumanoidRootPart")
            local flightConn = RunService.RenderStepped:Connect(function()
                if FlightEnabled then
                    local desiredVel = Vector3.new(0, 0, 0)
                    if UserInputService:IsKeyDown(Enum.KeyCode.W) then
                        desiredVel = desiredVel + (Camera.CFrame.LookVector * FlightSpeed)
                    end
                    if UserInputService:IsKeyDown(Enum.KeyCode.S) then
                        desiredVel = desiredVel - (Camera.CFrame.LookVector * FlightSpeed)
                    end
                    if UserInputService:IsKeyDown(Enum.KeyCode.D) then
                        desiredVel = desiredVel + (Camera.CFrame.RightVector * FlightSpeed)
                    end
                    if UserInputService:IsKeyDown(Enum.KeyCode.A) then
                        desiredVel = desiredVel - (Camera.CFrame.RightVector * FlightSpeed)
                    end
                    if UserInputService:IsKeyDown(Enum.KeyCode.Space) then
                        desiredVel = desiredVel + Vector3.new(0, FlightSpeed, 0)
                    end
                    if UserInputService:IsKeyDown(Enum.KeyCode.LeftControl) then
                        desiredVel = desiredVel - Vector3.new(0, FlightSpeed, 0)
                    end
                    hrp.Velocity = hrp.Velocity:Lerp(desiredVel, 0.1)
                end
            end)
            table.insert(connections, flightConn)
        end
    end
end)

FlightSection:NewSlider("Flight Speed", "Adjust flight speed", 500, 1, function(value)
    FlightSpeed = value
end)

-- NoClip Tab & Section
local NoclipTab = Window:CreateTab("NoClip")
local NoclipSection = NoclipTab:CreateSection("NoClip")
NoclipSection:NewToggle("NoClip", "Phase through objects", function(state)
    NoClipEnabled = state
    if NoClipEnabled then
        RunService:BindToRenderStep("NoClip", 100, function()
            if LocalPlayer.Character then
                for _, part in pairs(LocalPlayer.Character:GetDescendants()) do
                    if part:IsA("BasePart") then
                        part.CanCollide = false
                    end
                end
            end
        end)
    else
        RunService:UnbindFromRenderStep("NoClip")
    end
end)

-- Dash Tab & Section
local DashTab = Window:CreateTab("Dash")
local DashSection = DashTab:CreateSection("Dash")
DashSection:NewKeybind("Dash", "Press to dash", Enum.KeyCode.Q, function()
    if not DashCooldown and LocalPlayer.Character then
        DashCooldown = true
        local HRP = LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
        if HRP then
            local BV = Instance.new("BodyVelocity")
            BV.MaxForce = Vector3.new(math.huge, math.huge, math.huge)
            BV.Velocity = Camera.CFrame.LookVector * DashSpeed
            BV.Parent = HRP
            game:GetService("Debris"):AddItem(BV, 0.2)
            task.wait(1)
            DashCooldown = false
        end
    end
end)

DashSection:NewSlider("Dash Force", "Adjust dash force", 500, 50, function(value)
    DashSpeed = value
end)

-------------------------------------------------------
-- Visual Tab (ESP)
-------------------------------------------------------
local VisualTab = Window:CreateTab("Visual")
local ESPSection = VisualTab:CreateSection("ESP")

local function CreateNameESP(player)
    local billboard = Instance.new("BillboardGui")
    billboard.Name = "NameESP"
    billboard.Size = UDim2.new(0, 200, 0, 50)
    billboard.AlwaysOnTop = true
    billboard.StudsOffset = Vector3.new(0, 2, 0)
    
    local name = Instance.new("TextLabel")
    name.Name = "PlayerName"
    name.BackgroundTransparency = 1
    name.Size = UDim2.new(1, 0, 0, 20)
    name.Font = Enum.Font.SourceSansBold
    name.TextColor3 = Color3.new(1, 1, 1)
    name.TextSize = 14
    name.Text = player.Name
    name.Parent = billboard
    
    return billboard
end

local function UpdateAllESP()
    while RunESPUpdate do
        for _, player in ipairs(Players:GetPlayers()) do
            if player ~= LocalPlayer then
                if player.Character and player.Character:FindFirstChild("Head") then
                    if NameESP[player] then
                        if not player.Character.Head:FindFirstChild("NameESP") then
                            local esp = CreateNameESP(player)
                            NameESP[player] = esp
                            esp.Parent = player.Character.Head
                        end
                    end
                    if player.Character:FindFirstChild("Humanoid") then
                        local highlight = player.Character:FindFirstChild("ESP_Highlight")
                        if highlight then
                            local health = player.Character.Humanoid.Health
                            local maxHealth = player.Character.Humanoid.MaxHealth
                            local healthPercent = health / maxHealth
                            highlight.FillColor = Color3.new(1 - healthPercent, healthPercent, 0)
                        end
                    end
                    if CustomHighlights[player] then
                        if not player.Character:FindFirstChild("Highlight") then
                            local highlight = Instance.new("Highlight")
                            highlight.FillTransparency = 0.5
                            highlight.OutlineTransparency = 0
                            highlight.FillColor = CustomESPColor
                            highlight.OutlineColor = Color3.new(1, 1, 1)
                            highlight.Parent = player.Character
                            CustomHighlights[player] = highlight
                        end
                    end
                end
            end
        end
        task.wait(0.1)
    end
end

ESPSection:NewToggle("Name ESP", "Shows player names", function(state)
    if state then
        for _, player in ipairs(Players:GetPlayers()) do
            if player ~= LocalPlayer and player.Character then
                local esp = CreateNameESP(player)
                NameESP[player] = esp
                esp.Parent = player.Character:WaitForChild("Head")
            end
        end
    else
        for _, esp in pairs(NameESP) do
            esp:Destroy()
        end
        NameESP = {}
    end
end)

ESPSection:NewToggle("Health ESP", "Shows health-based highlights", function(state)
    if state then
        for _, player in ipairs(Players:GetPlayers()) do
            if player ~= LocalPlayer and player.Character then
                local highlight = Instance.new("Highlight")
                highlight.Name = "ESP_Highlight"
                highlight.Parent = player.Character
            end
        end
    else
        for _, player in ipairs(Players:GetPlayers()) do
            if player.Character then
                local highlight = player.Character:FindFirstChild("ESP_Highlight")
                if highlight then highlight:Destroy() end
            end
        end
    end
end)

ESPSection:NewColorPicker("ESP Color", "Pick custom ESP color", Color3.new(1, 0, 0), function(color)
    CustomESPColor = color
    for _, highlight in pairs(CustomHighlights) do
        highlight.FillColor = color
    end
end)

-------------------------------------------------------
-- Settings Tab
-------------------------------------------------------
local SettingsTab = Window:CreateTab("Settings")
local SettingsSection = SettingsTab:CreateSection("GUI Settings")

SettingsSection:NewDropdown("Theme", "Change UI Theme", {
    "DarkTheme",
    "LightTheme",
    "BloodTheme",
    "GrapeTheme",
    "Ocean",
    "Midnight",
    "Sentinel",
    "Synapse"
}, function(currentTheme)
    SokaUI:ChangeTheme(currentTheme)
end)

SettingsSection:NewKeybind("Toggle GUI", "Shows/Hides the GUI", Enum.KeyCode.RightShift, function()
    Window:ToggleUI()
end)

local function unloadScript()
    -- Disconnect all connections.
    for _, con in ipairs(connections) do
        pcall(function() con:Disconnect() end)
    end
    connections = {}
    
    -- Destroy all Name ESP elements.
    for _, esp in pairs(NameESP) do
        pcall(function() esp:Destroy() end)
    end
    NameESP = {}
    
    -- Destroy all custom highlights.
    for _, highlight in pairs(CustomHighlights) do
        pcall(function() highlight:Destroy() end)
    end
    CustomHighlights = {}
    
    -- Destroy the main window.
    if Window.Destroy then
        pcall(function() Window:Destroy() end)
    end
    print("Script unloaded successfully.")
end

SettingsSection:NewButton("Unload Script", "Unload all changes and close the GUI", unloadScript)

-- Optionally, start the ESP update loop.
task.spawn(UpdateAllESP)
