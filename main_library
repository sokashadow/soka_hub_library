                    local btn = Create("TextButton", {
                        Size = UDim2.new(0.4, 0, 1, 0),
                        Text = "Change",
                        BackgroundColor3 = Color3.fromRGB(70, 70, 70),
                        TextColor3 = Color3.new(1,1,1),
                        Font = Enum.Font.SourceSans,
                        TextSize = 18,
                        Parent = keybindFrame,
                    })
                    
                    btn.MouseButton1Click:Connect(function()
                        label.Text = text .. " [ ... ]"
                        local input = UserInputService.InputBegan:Wait()
                        key = input.KeyCode
                        label.Text = text .. " [" .. key.Name .. "]"
                        if callback then
                            callback(key)
                        end
                    end)
                    
                    UserInputService.InputBegan:Connect(function(input, gameProcessed)
                        if gameProcessed then return end
                        if input.KeyCode == key then
                            if callback then
                                callback(key)
                            end
                        end
                    end)
                    
                    table.insert(self.Elements, keybindFrame)
                end
                
                function section:NewButton(text, desc, callback)
                    local btn = Create("TextButton", {
                        Size = UDim2.new(1, -10, 0, 30),
                        Text = text,
                        BackgroundColor3 = Color3.fromRGB(50,50,50),
                        TextColor3 = Color3.new(1,1,1),
                        Font = Enum.Font.SourceSans,
                        TextSize = 18,
                        Parent = sectionFrame,
                    })
                    
                    btn.MouseButton1Click:Connect(function()
                        if callback then
                            callback()
                        end
                    end)
                    
                    table.insert(self.Elements, btn)
                end
                
                return section
            end,
            _container = tab._container -- use the tab's container for sections
        }
    })
    
    -- Create a clickable tab label/button in the TabHolder.
    local tabLabel = Create("TextButton", {
        Size = UDim2.new(0, 100, 0, 30),
        Text = name,
        BackgroundColor3 = Color3.fromRGB(40,40,40),
        TextColor3 = Color3.new(1,1,1),
        Font = Enum.Font.SourceSansBold,
        TextSize = 20,
        Parent = self._tabHolder,
    })
    
    tabLabel.MouseButton1Click:Connect(function()
        for _, t in ipairs(self.Tabs) do
            t._container.Visible = false
        end
        container.Visible = true
        for _, child in ipairs(self._tabHolder:GetChildren()) do
            if child:IsA("TextButton") then
                child.BackgroundColor3 = Color3.fromRGB(40,40,40)
            end
        end
        tabLabel.BackgroundColor3 = Color3.fromRGB(70,70,70)
    end)
    
    table.insert(self.Tabs, tab)
    return tab
end

----------------------------------------------------------------
-- Library Creation
----------------------------------------------------------------

function SokaHubUI:CreateWindow(title, theme)
    -- Create main ScreenGui and Window Frame; use PlayerGui for compatibility
    local ScreenGui = Create("ScreenGui", {
        Name = "SokaHubUI",
        Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
    })
    
    local MainFrame = Create("Frame", {
        Size = UDim2.new(0, 600, 0, 400),
        Position = UDim2.new(0.5, -300, 0.5, -200),
        BackgroundColor3 = (theme == "DarkTheme") and Color3.fromRGB(20,20,20) or Color3.fromRGB(240,240,240),
        BorderSizePixel = 0,
        Parent = ScreenGui
    })
    
    -- Title
    local TitleLabel = Create("TextLabel", {
        Size = UDim2.new(1, 0, 0, 30),
        Text = title,
        BackgroundTransparency = 1,
        TextColor3 = (theme == "DarkTheme") and Color3.new(1,1,1) or Color3.new(0,0,0),
        Font = Enum.Font.SourceSansBold,
        TextSize = 24,
        Parent = MainFrame,
    })
    
    -- Holder for Tabs
    local TabHolder = Create("Frame", {
        Size = UDim2.new(1, 0, 0, 40),
        BackgroundColor3 = Color3.fromRGB(30,30,30),
        BorderSizePixel = 0,
        Parent = MainFrame,
        Position = UDim2.new(0, 0, 0, 30)
    })
    local tabListLayout = Create("UIListLayout", {
        Parent = TabHolder,
        FillDirection = Enum.FillDirection.Horizontal,
        HorizontalAlignment = Enum.HorizontalAlignment.Left,
        VerticalAlignment = Enum.VerticalAlignment.Center,
        Padding = UDim.new(0, 5),
    })
    
    -- Content holder for tab contents (sections)
    local ContentHolder = Create("Frame", {
        Size = UDim2.new(1, 0, 1, -70),
        BackgroundColor3 = Color3.fromRGB(25,25,25),
        BorderSizePixel = 0,
        Parent = MainFrame,
        Position = UDim2.new(0, 0, 0, 70)
    })
    
    -- Make the MainFrame draggable
    MakeDraggable(MainFrame)
    
    local window = setmetatable({
        _Tabs = {},
        Tabs = {},
        _tabHolder = TabHolder,
        _content = ContentHolder,
        Screen = ScreenGui,
        Window = MainFrame,
        Title = title,
        Themes = {DarkTheme = true, LightTheme = false},
    }, Window)
    
    return window
end

return SokaHubUI
